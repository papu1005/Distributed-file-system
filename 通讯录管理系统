#include<iostream>
#include<string>
using namespace std;
#define MAX 1000

//设计联系人结构体
struct Person
{
	string m_Name;
	int m_Sex;
	int m_Age;
	string m_Phone;
	string m_Addr;
};

//设计通讯录结构体
struct Addressbooks
{
	struct Person personArray[MAX];//通讯录中保存的联系人数组
    
	int m_Size;//通讯录中当前记录联系人个数
};

//1.添加联系人
void addPerson(Addressbooks * abs)
{
	//判断通讯录是否已满，满了
	if (abs->m_Size == MAX)
	{
		cout << "通讯录已满" << endl;
		return;
	}
	else
	{
		//姓名
		string name;
		cout << "请输入姓名：" << endl;
		cin >> name;
		abs->personArray[abs->m_Size].m_Name = name;

		//性别
		cout << "请输入性别" << endl;
		cout << "1 --- 男" << endl;
		cout << "2 --- 女" << endl;
		int sex = 0;
		while (true)
		{
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->personArray[abs->m_Size].m_Sex = sex;
				break;
			}
			cout << "输入有误，请重新输入" << endl;
		}

		//年龄
		cout << "请输入年龄：" << endl;
		int age = 0;
		cin >> age;
		abs->personArray[abs->m_Size].m_Age = age;

		//电话
		cout << "请输入电话：" << endl;
		string phone;
		cin >> phone;
		abs->personArray[abs->m_Size].m_Phone = phone;

		//住址
		cout << "请输入家庭住址：" << endl;
		string address;
		cin >> address;
		abs->personArray[abs->m_Size].m_Addr = address;

		//更新通讯录中的人数
		abs->m_Size++;
		cout << "恭喜添加成功！" << endl;

		system("pause");//请按任意键继续
		system("cls");//清屏
	}
}

//2、显示联系人
void showPerson(Addressbooks* abs)
{
	//判断通讯录中人数是否为0，如果是0，提示记录为空
	//如果不是0，显示记录的联系人信息
	if (abs->m_Size == 0)
	{
		cout << "当前记录为空" << endl;
	}
	else
	{
		for (int i = 0; i < abs->m_Size; i++)
		{
			cout << "姓名：" << abs->personArray[i].m_Name <<"\t";
			cout << "性别：" << (abs->personArray[i].m_Sex==1?"男":"女" )<< "\t";
			cout << "年龄：" << abs->personArray[i].m_Age << "\t";
			cout << "电话：" << abs->personArray[i].m_Phone << "\t";
			cout << "地址 ：" << abs->personArray[i].m_Addr << "\t";
			system("pause");//请按任意键继续
			system("cls");//清屏
		}
	}
}

//3、删除联系人
//检测联系人是否存在，如果存在，返回联系人所在数组中的具体位置，不存在返回-1
int isExist(Addressbooks* abs, string name)//参数一通讯录 参数二对比姓名
{
	for (int i = 0; i < abs->m_Size; i++)
	{
		if (abs->personArray[i].m_Name == name)
		{
			return i;//找到了
		}
	}
	return -1;//没找到
}
void deletePerson(Addressbooks* abs)
{
	cout << "请输入您要删除的联系人：" << endl;
	string name;
	cin >> name;

	int ret = isExist(abs,name);

	if (ret== -1)
	{
		cout << "查无此人" << endl;
	}
	
	else
	{
		//删除操作就是将某个人的数据向前移动，并让记录人员的个数减一
		for (int i = ret; i < abs->m_Size; i++)
		{
			abs->personArray[i] = abs->personArray[i + 1];
		}
		abs->m_Size--;//更新通讯录中的人员数量
		cout << "删除成功" << endl;
	}
	system("pause");
	system("cls");
}
//4、查找联系人
void findPerson(Addressbooks *abs)
{
	cout << "请输入您要查找的联系人" << endl;
	string name;
	cin >> name;

	int ret = isExist(abs, name);
	if (ret != -1)//找到了
	{
		cout << "姓名： " << abs->personArray[ret].m_Name << "\t";
		cout << "性别： " << abs->personArray[ret].m_Sex << "\t";
		cout << "年龄： " << abs->personArray[ret].m_Age << "\t";
		cout << "电话： " << abs->personArray[ret].m_Phone << "\t";
		cout << "地址： " << abs->personArray[ret].m_Addr << endl;
	}
	else 
	{
		cout << "未找到联系人 " << endl;

	}
	system("pause");
	system("cls");
}
//5、修改联系人
void modifyPerson(Addressbooks* abs) 
{
	cout << "请输入您要修改的联系人" << endl;
	string name;
	cin >> name;

	int ret = isExist(abs, name);

	if (ret != -1)
	{
		string name;//修改姓名
		cout << "请输入姓名： " << endl;
		cin >> name;
		abs->personArray[ret].m_Name = name;

		cout << "请输入性别： " << endl;
		cout << "1 --- 男" << endl;
		cout << "2 --- 女" << endl;

		int sex = 0;

		while(true)
		{
		cin >> sex;
		if (sex == 1 || sex == 2)
		  {
			abs->personArray[ret].m_Sex = sex;
			break;
		  }
		cout << "输入错误，请重新输入： " << endl;
		}
		cout << "请输入年龄： " << endl;
		int age = 0;
		cin >> age;
		abs->personArray[ret].m_Age = age;

		cout << "请输入联系电话： " << endl;
		string phone;
		cin >> phone;
		abs->personArray[ret].m_Phone = phone;

		cout << "请输入联系住址： " << endl;
		string address;
		cin >> address;
		abs->personArray[ret].m_Addr= address;

		cout << "修改成功！" << endl;
	}
	else
	{
		cout << "未找到联系人 " << endl;
	}
	system("pause");
	system("cls");
}
//6、清空联系人
void cleanPerson(Addressbooks* abs)
{
	abs->m_Size = 0;
	cout << "通讯录已清空！" << endl;
	system("pause");
	system("cls");
}
//菜单页面
void showMenu() 
{
	cout << "*******************************" << endl;
	cout << "*****   1、添加联系人：   *****" << endl;
	cout << "*****   2、显示联系人：   *****" << endl;
	cout << "*****   3、删除联系人：   *****" << endl;
	cout << "*****   4、查找联系人：   *****" << endl;
	cout << "*****   5、修改联系人：   *****" << endl;
	cout << "*****   6、清空联系人：   *****" << endl;
	cout << "*****   0、退出通讯录：   *****" << endl;
	cout << "*******************************" << endl;
}
int main() 
{
	Addressbooks abs;
	abs.m_Size = 0;
	int select = 0;//创建用户选择输入的变量
	
	while (true)
	{

	showMenu();
	
	cin >> select;

	switch (select)
	{
	case 1://添加联系人
		addPerson(&abs);//利用地址传递
		break;
	case 2://显示联系人
		showPerson(&abs);
		break;
	case 3://3.删除联系人
	{
		cout << "请输入联系人的姓名" << endl;
		string name;
		cin >> name;
		if (isExist(&abs, name) == -1)
		{
			cout << "查无此人" << endl;
		}
		else
		{
			cout << "找到此人" << endl;
			deletePerson(&abs);
		}
	
	}
		break;
	case 4://查找联系人
		findPerson(&abs);
		break;
	case 5://修改联系人
		modifyPerson(&abs);
		break;
	case 6://清空联系人
		cleanPerson(&abs);
		break;
	case 0://退出通讯录
		cout << "欢迎下次使用！" << endl;
		system("pause");
		return 0;
		break;
	}

}
	system("pause");
	return 0;
}

